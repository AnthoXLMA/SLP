apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    {{- include "theglobetrotters.postgres.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "22"
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      {{- include "theglobetrotters.postgres.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/postgres_secret: {{ include (print $.Template.BasePath "/20_postgres_secret.yaml") . | sha256sum }}
      labels:
        {{- include "theglobetrotters.postgres.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "theglobetrotters.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: postgres
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.postgres }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: password
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
          volumeMounts:
          - name: postgres-storage
            mountPath: "/var/lib/postgresql/data"
          resources:
            {{- toYaml .Values.resources.postgres | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "default"
      resources:
        requests:
          storage: {{ .Values.postgres.storage }}